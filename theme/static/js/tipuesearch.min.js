/*
Tipue Search 7.1
Copyright (c) 2019 Tipue
Tipue Search is released under the MIT License
http://www.tipue.com/search
*/

;(function ($) {
    $.fn.tipuesearch = function (options) {
        var set = $.extend(
            {
                contextBuffer: 60,
                contextLength: 60,
                contextStart: 90,
                debug: false,
                descriptiveWords: 25,
                footerPages: 3,
                highlightTerms: true,
                imageZoom: true,
                minimumLength: 3,
                newWindow: false,
                show: 10,
                showContext: true,
                showTitleCount: true,
                showURL: true,
                wholeWords: true,
            },
            options
        )

        return this.each(function () {
            var tipuesearch_t_c = 0
            var tipuesearch_in = tipuesearch

            var tipue_search_w = ''
            if (set.newWindow) {
                tipue_search_w = ' target="_blank"'
            }

            $(this).keyup(function (event) {
                if (event.keyCode == '13') {
                    event.preventDefault()
                }
                getTipueSearch(0, true)
            })

            function getTipueSearch(start, replace) {
                $('#tipue_search_content').hide()

                var out = ''
                var show_replace = false
                var show_stop = false
                var standard = true
                var c = 0
                var found = []

                var d_o = $('#tipue_search_input').val()
                d_o = d_o.replace(/\+/g, ' ').replace(/\s\s+/g, ' ')

                d_o = $.trim(d_o)
                var d = d_o.toLowerCase()

                if (
                    (d.match('^"') && d.match('"$')) ||
                    (d.match("^'") && d.match("'$"))
                ) {
                    standard = false
                }

                var d_w = d.split(' ')

                if (standard) {
                    d = ''
                    for (var i = 0; i < d_w.length; i++) {
                        var a_w = true
                        for (
                            var f = 0;
                            f < tipuesearch_stop_words.length;
                            f++
                        ) {
                            if (d_w[i] == tipuesearch_stop_words[f]) {
                                a_w = false
                                show_stop = true
                            }
                        }
                        if (a_w) {
                            d = d + ' ' + d_w[i]
                        }
                    }
                    d = $.trim(d)
                    d_w = d.split(' ')
                } else {
                    d = d.substring(1, d.length - 1)
                }

                if (d.length >= set.minimumLength) {
                    if (standard) {
                        if (replace) {
                            var d_r = d
                            for (var i = 0; i < d_w.length; i++) {
                                for (
                                    var f = 0;
                                    f < tipuesearch_replace.words.length;
                                    f++
                                ) {
                                    if (
                                        d_w[i] ==
                                        tipuesearch_replace.words[f].word
                                    ) {
                                        d = d.replace(
                                            d_w[i],
                                            tipuesearch_replace.words[f]
                                                .replace_with
                                        )
                                        show_replace = true
                                    }
                                }
                            }
                            d_w = d.split(' ')
                        }

                        var d_t = d
                        for (var i = 0; i < d_w.length; i++) {
                            for (
                                var f = 0;
                                f < tipuesearch_stem.words.length;
                                f++
                            ) {
                                if (d_w[i] == tipuesearch_stem.words[f].word) {
                                    d_t =
                                        d_t +
                                        ' ' +
                                        tipuesearch_stem.words[f].stem
                                }
                            }
                        }
                        d_w = d_t.split(' ')

                        for (var i = 0; i < tipuesearch_in.pages.length; i++) {
                            var score = 0
                            var s_t = tipuesearch_in.pages[i].text
                            for (var f = 0; f < d_w.length; f++) {
                                var pat = new RegExp(d_w[f], 'gi')
                                if (
                                    tipuesearch_in.pages[i].title.search(pat) !=
                                    -1
                                ) {
                                    var m_c =
                                        tipuesearch_in.pages[i].title.match(
                                            pat
                                        ).length
                                    score += 20 * m_c
                                }
                                if (
                                    tipuesearch_in.pages[i].text.search(pat) !=
                                    -1
                                ) {
                                    var m_c =
                                        tipuesearch_in.pages[i].text.match(
                                            pat
                                        ).length
                                    score += 20 * m_c
                                }

                                if (set.highlightTerms) {
                                    if (set.highlightEveryTerm) {
                                        var patr = new RegExp(
                                            '(' + d_w[f] + ')',
                                            'gi'
                                        )
                                    } else {
                                        var patr = new RegExp(
                                            '(' + d_w[f] + ')',
                                            'i'
                                        )
                                    }
                                }

                                if (
                                    tipuesearch_in.pages[i].url.search(pat) !=
                                    -1
                                ) {
                                    score += 20
                                }

                                if (score != 0) {
                                    for (
                                        var e = 0;
                                        e < tipuesearch_weight.weight.length;
                                        e++
                                    ) {
                                        if (
                                            tipuesearch_in.pages[i].url ==
                                            tipuesearch_weight.weight[e].url
                                        ) {
                                            score +=
                                                tipuesearch_weight.weight[e]
                                                    .score
                                        }
                                    }
                                }

                                if (d_w[f].match('^-')) {
                                    pat = new RegExp(d_w[f].substring(1), 'i')
                                    if (
                                        tipuesearch_in.pages[i].title.search(
                                            pat
                                        ) != -1 ||
                                        tipuesearch_in.pages[i].text.search(
                                            pat
                                        ) != -1 ||
                                        tipuesearch_in.pages[i].tags.search(
                                            pat
                                        ) != -1
                                    ) {
                                        score = 0
                                    }
                                }
                            }

                            if (score != 0) {
                                found.push({
                                    score: score,
                                    title: tipuesearch_in.pages[i].title,
                                    desc: s_t,
                                    url: tipuesearch.pages[i].url,
                                    category: tipuesearch.pages[i].category,
                                    date: tipuesearch.pages[i].date,
                                    thumbnail:
                                        tipuesearch_in.pages[i].thumbnail,
                                })
                                c++
                            }
                        }
                    } else {
                        for (var i = 0; i < tipuesearch_in.pages.length; i++) {
                            var score = 0
                            var s_t = tipuesearch_in.pages[i].text
                            var pat = new RegExp(d, 'gi')
                            if (
                                tipuesearch_in.pages[i].title.search(pat) != -1
                            ) {
                                var m_c =
                                    tipuesearch_in.pages[i].title.match(
                                        pat
                                    ).length
                                score += 20 * m_c
                            }
                            if (
                                tipuesearch_in.pages[i].text.search(pat) != -1
                            ) {
                                var m_c =
                                    tipuesearch_in.pages[i].text.match(
                                        pat
                                    ).length
                                score += 20 * m_c
                            }

                            if (set.highlightTerms) {
                                if (set.highlightEveryTerm) {
                                    var patr = new RegExp('(' + d + ')', 'gi')
                                }
                            }

                            if (tipuesearch_in.pages[i].url.search(pat) != -1) {
                                score += 20
                            }

                            if (score != 0) {
                                for (
                                    var e = 0;
                                    e < tipuesearch_weight.weight.length;
                                    e++
                                ) {
                                    if (
                                        tipuesearch_in.pages[i].url ==
                                        tipuesearch_weight.weight[e].url
                                    ) {
                                        score +=
                                            tipuesearch_weight.weight[e].score
                                    }
                                }
                            }

                            if (score != 0) {
                                found.push({
                                    score: score,
                                    title: tipuesearch.pages[i].title,
                                    desc: s_t,
                                    url: tipuesearch.pages[i].url,
                                    category: tipuesearch.pages[i].category,
                                    date: tipuesearch.pages[i].date,
                                    thumbnail: tipuesearch.pages[i].thumbnail,
                                })
                                c++
                            }
                        }
                    }

                    if (c != 0) {
                        if (show_replace == 1) {
                            out +=
                                '<div id="tipue_search_warning">' +
                                tipuesearch_string_2 +
                                ' ' +
                                d +
                                '. ' +
                                tipuesearch_string_3 +
                                ' <a id="tipue_search_replaced">' +
                                d_r +
                                '</a></div>'
                        }
                        if (c == 1) {
                            out +=
                                '<div id="tipue_search_results_count">' +
                                tipuesearch_string_4 +
                                '</div>'
                        } else {
                            c_c = c
                                .toString()
                                .replace(/\B(?=(\d{3})+(?!\d))/g, ',')
                            out +=
                                '<div id="tipue_search_results_count">' +
                                c_c +
                                ' ' +
                                tipuesearch_string_5 +
                                '</div>'
                        }

                        found.sort(function (a, b) {
                            return b.score - a.score
                        })

                        var pagination = ''
                        if (c > set.show) {
                            var pages = Math.ceil(c / set.show)
                            var page = start / set.show
                            pagination +=
                                '<div id="pagination" style="text-align:center;margin-bottom: 10px">'

                            if (start > 0) {
                                pagination +=
                                    '<span class="pagination_element prev"><a data-id="' +
                                    (start - set.show) +
                                    '_' +
                                    replace +
                                    '">«</a></span>'
                            } else {
                                pagination +=
                                    '<span class="pagination_element_disabled">«</span>'
                            }

                            if (page <= 2) {
                                var p_b = pages
                                if (pages > 3) {
                                    p_b = 3
                                }
                                for (var f = 0; f < p_b; f++) {
                                    if (f == page) {
                                        pagination +=
                                            '<span class="pagination_element pagination_element_active">' +
                                            (f + 1) +
                                            '</span>'
                                    } else {
                                        pagination +=
                                            '<span class="pagination_element"><a data-id="' +
                                            f * set.show +
                                            '_' +
                                            replace +
                                            '">' +
                                            (f + 1) +
                                            '</a></span>'
                                    }
                                }
                            } else {
                                var p_b = page + 2
                                if (p_b > pages) {
                                    p_b = pages
                                }
                                for (var f = page - 1; f < p_b; f++) {
                                    if (f == page) {
                                        pagination +=
                                            '<span class="pagination_element pagination_element_active">' +
                                            (f + 1) +
                                            '</span>'
                                    } else {
                                        pagination +=
                                            '<span><a class="tipue_search_foot_box" data-id="' +
                                            f * set.show +
                                            '_' +
                                            replace +
                                            '">' +
                                            (f + 1) +
                                            '</a></span>'
                                    }
                                }
                            }

                            if (page + 1 != pages) {
                                pagination +=
                                    '<span class="next pagination_element"><a data-id="' +
                                    (start + set.show) +
                                    '_' +
                                    replace +
                                    '">»</a></span>'
                            } else {
                                pagination +=
                                    '<span class="next pagination_element_disabled">»</span>'
                            }

                            pagination += '</div>'
                        }

                        out += pagination
                        var l_o = 0
                        for (var i = 0; i < found.length; i++) {
                            if (l_o >= start && l_o < set.show + start) {
                                var t = found[i].desc
                                var t_d = ''
                                var t_w = t.split(' ')
                                if (t_w.length < set.descriptiveWords) {
                                    t_d = t
                                } else {
                                    for (
                                        var f = 0;
                                        f < set.descriptiveWords;
                                        f++
                                    ) {
                                        t_d += t_w[f] + ' '
                                    }
                                }
                                t_d = $.trim(t_d)
                                if (t_d.charAt(t_d.length - 1) != '.') {
                                    t_d += ' ...'
                                }
                                f = found[i]
                                out +=
                                    '<article class="post-preview"><div class="post-inner post-hover"><div class="post-thumbnail">'

                                out +=
                                    '<a href="' +
                                    f.url +
                                    '" rel="bookmark" title="' +
                                    f.title +
                                    '"><h2 class="post-title entry-title">' +
                                    f.title +
                                    '</h2></a><div class="entry excerpt entry-summary">' +
                                    t_d +
                                    '<div class="readmore"><a href="' +
                                    f.url +
                                    '" title="' +
                                    f.title +
                                    '">[weiter lesen]</a></div></div></div></article>'
                            }
                            l_o++
                        }
                        out += pagination
                    } else {
                        out +=
                            '<div id="tipue_search_warning">' +
                            tipuesearch_string_8 +
                            '</div>'
                    }
                } else {
                    if (show_stop) {
                        out +=
                            '<div id="tipue_search_warning">' +
                            tipuesearch_string_8 +
                            '. ' +
                            tipuesearch_string_9 +
                            '</div>'
                    } else {
                        out +=
                            '<div id="tipue_search_warning">' +
                            tipuesearch_string_10 +
                            '</div>'
                        if (set.minimumLength == 1) {
                            out +=
                                '<div id="tipue_search_warning">' +
                                tipuesearch_string_11 +
                                '</div>'
                        } else {
                            out +=
                                '<div id="tipue_search_warning">' +
                                tipuesearch_string_12 +
                                ' ' +
                                set.minimumLength +
                                ' ' +
                                tipuesearch_string_13 +
                                '</div>'
                        }
                    }
                }

                $('#tipue_search_content').hide().html(out).show()

                $('#tipue_search_replaced').click(function () {
                    getTipueSearch(0, false)
                })
                $('.tipue_search_related_btn').click(function () {
                    $('#tipue_search_input').val($(this).attr('id'))
                    getTipueSearch(0, true)
                })

                $('.pagination_element').click(function () {
                    var id_v = this.children[0].dataset['id']
                    var id_a = id_v.split('_')

                    getTipueSearch(parseInt(id_a[0]), id_a[1])
                })
            }
        })
    }
})(jQuery)
