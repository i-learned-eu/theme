/*
Tipue Search 7.1
Copyright (c) 2019 Tipue
Tipue Search is released under the MIT License
http://www.tipue.com/search
*/

function tipuesearch(element) {
    var set = {
        contextBuffer: 60,
        contextLength: 60,
        contextStart: 90,
        debug: false,
        descriptiveWords: 25,
        footerPages: 3,
        highlightTerms: true,
        imageZoom: true,
        minimumLength: 3,
        newWindow: false,
        show: 10,
        showContext: true,
        showTitleCount: true,
        showURL: true,
        wholeWords: true,
    }

    var tipuesearch_t_c = 0
    var tipuesearch_in = tipuesearchData

    var tipue_search_w = ''
    if (set.newWindow) {
        tipue_search_w = ' target="_blank"'
    }

    element.addEventListener('keyup', function (event) {
        if (event.keyCode == '13') {
            event.preventDefault()
        }
        getTipueSearch(0, true)
    })

    function getTipueSearch(start, replace) {
        var out = ''
        var show_replace = false
        var show_stop = false
        var standard = true
        var c = 0
        var found = []

        var d_o = document.getElementById('tipue_search_input').value
        d_o = d_o.replace(/\+/g, ' ').replace(/\s\s+/g, ' ')

        d_o = d_o.trim()
        var d = d_o.toLowerCase()

        if ((d.match('^"') && d.match('"$')) || (d.match("^'") && d.match("'$"))) {
            standard = false
        }

        var d_w = d.split(' ')

        if (standard) {
            d = ''
            for (var i = 0; i < d_w.length; i++) {
                var a_w = true
                for (var f = 0; f < tipuesearch_stop_words.length; f++) {
                    if (d_w[i] == tipuesearch_stop_words[f]) {
                        a_w = false
                        show_stop = true
                    }
                }
                if (a_w) {
                    d = d + ' ' + d_w[i]
                }
            }
            d = d.trim()
            d_w = d.split(' ')
        } else {
            d = d.substring(1, d.length - 1)
        }

        if (d.length >= set.minimumLength) {
            if (standard) {
                if (replace) {
                    var d_r = d
                    for (var i = 0; i < d_w.length; i++) {
                        for (var f = 0; f < tipuesearch_replace.words.length; f++) {
                            if (d_w[i] == tipuesearch_replace.words[f].word) {
                                d = d.replace(d_w[i], tipuesearch_replace.words[f].replace_with)
                                show_replace = true
                            }
                        }
                    }
                    d_w = d.split(' ')
                }

                var d_t = d
                for (var i = 0; i < d_w.length; i++) {
                    for (var f = 0; f < tipuesearch_stem.words.length; f++) {
                        if (d_w[i] == tipuesearch_stem.words[f].word) {
                            d_t = d_t + ' ' + tipuesearch_stem.words[f].stem
                        }
                    }
                }
                d_w = d_t.split(' ')

                for (var i = 0; i < tipuesearch_in.pages.length; i++) {
                    var score = 0
                    var s_t = tipuesearch_in.pages[i].text

                    for (var f = 0; f < d_w.length; f++) {
                        var pat = new RegExp(d_w[f], 'gi')
                        if (tipuesearch_in.pages[i].title.search(pat) != -1) {
                            var m_c = tipuesearch_in.pages[i].title.match(pat).length
                            score += 20 * m_c
                        }
                        if (tipuesearch_in.pages[i].text.search(pat) != -1) {
                            var m_c = tipuesearch_in.pages[i].text.match(pat).length
                            score += 20 * m_c
                        }

                        if (set.highlightTerms) {
                            if (set.highlightEveryTerm) {
                                var patr = new RegExp('(' + d_w[f] + ')', 'gi')
                            } else {
                                var patr = new RegExp('(' + d_w[f] + ')', 'i')
                            }
                        }

                        if (tipuesearch_in.pages[i].url.search(pat) != -1) {
                            score += 20
                        }

                        if (score != 0) {
                            for (var e = 0; e < tipuesearch_weight.weight.length; e++) {
                                if (tipuesearch_in.pages[i].url == tipuesearch_weight.weight[e].url) {
                                    score += tipuesearch_weight.weight[e].score
                                }
                            }
                        }

                        if (d_w[f].match('^-')) {
                            pat = new RegExp(d_w[f].substring(1), 'i')
                            if (
                                tipuesearch_in.pages[i].title.search(pat) != -1 ||
                                tipuesearch_in.pages[i].text.search(pat) != -1 ||
                                tipuesearch_in.pages[i].tags.search(pat) != -1
                            ) {
                                score = 0
                            }
                        }
                    }

                    if (score != 0) {
                        found.push({
                            score: score,
                            desc: s_t,
                            title: tipuesearch_in.pages[i].title,
                            summary: tipuesearchData.pages[i].summary,
                            url: tipuesearchData.pages[i].url,
                            category: tipuesearchData.pages[i].category,
                            author: tipuesearchData.pages[i].author,
                            date: tipuesearchData.pages[i].date,
                            thumbnail: tipuesearch_in.pages[i].thumbnail,
                        })
                        c++
                    }
                }
            } else {
                for (var i = 0; i < tipuesearch_in.pages.length; i++) {
                    var score = 0
                    var s_t = tipuesearch_in.pages[i].text
                    var pat = new RegExp(d, 'gi')
                    if (tipuesearch_in.pages[i].title.search(pat) != -1) {
                        var m_c = tipuesearch_in.pages[i].title.match(pat).length
                        score += 20 * m_c
                    }
                    if (tipuesearch_in.pages[i].text.search(pat) != -1) {
                        var m_c = tipuesearch_in.pages[i].text.match(pat).length
                        score += 20 * m_c
                    }

                    if (set.highlightTerms) {
                        if (set.highlightEveryTerm) {
                            var patr = new RegExp('(' + d + ')', 'gi')
                        }
                    }

                    if (tipuesearch_in.pages[i].url.search(pat) != -1) {
                        score += 20
                    }

                    if (score != 0) {
                        for (var e = 0; e < tipuesearch_weight.weight.length; e++) {
                            if (tipuesearch_in.pages[i].url == tipuesearch_weight.weight[e].url) {
                                score += tipuesearch_weight.weight[e].score
                            }
                        }
                    }

                    if (score != 0) {
                        found.push({
                            score: score,
                            desc: s_t,
                            title: tipuesearch_in.pages[i].title,
                            summary: tipuesearchData.pages[i].summary,
                            url: tipuesearchData.pages[i].url,
                            category: tipuesearchData.pages[i].category,
                            author: tipuesearchData.pages[i].author,
                            date: tipuesearchData.pages[i].date,
                            thumbnail: tipuesearchData.pages[i].thumbnail,
                        })
                        c++
                    }
                }
            }

            if (c != 0) {
                if (show_replace == 1) {
                    out +=
                        '<div id="tipue_search_warning">' +
                        tipuesearch_string_2 +
                        ' ' +
                        d +
                        '. ' +
                        tipuesearch_string_3 +
                        ' <a id="tipue_search_replaced">' +
                        d_r +
                        '</a></div>'
                }
                found.sort(function (a, b) {
                    return b.score - a.score
                })

                var l_o = 0
                for (var i = 0; i < found.length; i++) {
                    if (l_o >= start && l_o < set.show + start) {
                        var t = found[i].desc
                        var t_d = ''
                        var t_w = t.split(' ')
                        if (t_w.length < set.descriptiveWords) {
                            t_d = t
                        } else {
                            for (var f = 0; f < set.descriptiveWords; f++) {
                                t_d += t_w[f] + ' '
                            }
                        }
                        t_d = t_d.trim()
                        if (t_d.charAt(t_d.length - 1) != '.') {
                            t_d += ' ...'
                        }
                        f = found[i]

                        out +=
                            '<div class="article card"><div class="author"><img src="https://beta.ilearned.eu/static/img/contributors/' +
                            f.author.toLowerCase() +
                            '.webp"><a href="/author/' +
                            f.author +
                            '.html">' +
                            f.author +
                            '</a></div><h3><a href="' +
                            f.url +
                            '">' +
                            f.title +
                            '</a></h3><a href="' +
                            f.url +
                            '">' +
                            f.summary +
                            '</a><div class="metadata"><time>' +
                            f.date +
                            ' </time></div></div>'
                    }
                    l_o++
                }
            } else {
                out += '<div id="tipue_search_warning">' + tipuesearch_string_8 + '</div>'
            }
        } else {
            if (show_stop) {
                out += '<div id="tipue_search_warning">' + tipuesearch_string_8 + '. ' + tipuesearch_string_9 + '</div>'
            } else {
                out += '<div id="tipue_search_warning">' + tipuesearch_string_10 + '</div>'
                if (set.minimumLength == 1) {
                    out += '<div id="tipue_search_warning">' + tipuesearch_string_11 + '</div>'
                } else {
                    out +=
                        '<div id="tipue_search_warning">' +
                        tipuesearch_string_12 +
                        ' ' +
                        set.minimumLength +
                        ' ' +
                        tipuesearch_string_13 +
                        '</div>'
                }
            }
        }
        document.getElementById('tipue_search_content').innerHTML = out
    }
}
